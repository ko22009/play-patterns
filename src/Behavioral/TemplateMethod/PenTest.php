<?php

namespace PlayPatterns\Behavioral\TemplateMethod;

use PHPUnit\Framework\TestCase;

class PenTest extends TestCase
{

    public function testPenNoExistWithOutMake()
    {
        $ballPan = new BallPen();
        $this->assertFalse($ballPan->getHandle());
    }

    public function testBallPenNoChangeSticker()
    {
        $ballPan = new BallPen();
        $this->assertFalse($ballPan->getStickerAccess());
    }

    public function testBallPenMake()
    {
        $ballPan = new BallPen();
        $ballPan->make();
        $this->assertTrue($ballPan->getHandle() && $ballPan->getKernel() && $ballPan->getSticker());
    }

    public function testKernelRollerPenIsCustom()
    {
        $rollerPen = new RollerPen();
        $rollerPen->make();
        $this->assertEquals(RollerPen::class, $rollerPen->getKernelFromCalling());
    }

    public function testKernelBallPenIsDefault()
    {
        $ballPen = new BallPen();
        $ballPen->make();
        $this->assertEquals(Pen::class, $ballPen->getKernelFromCalling());
    }

}